#include<stdio.h>
#include<string.h>
#include<assert.h>

int my_strcmp_1(const char* str1, const char* str2)
{
	assert(str1 != NULL);
	assert(str2 != NULL);
	//依次对比str1和str2的各个字符,只有当str1和str2同时指向'\0'时，循环才结束
	while (*str1 || *str2 )
	{
		//1.*str1>*str2，返回1
		if (*str1 > *str2)
		{
			return 1;
		}
		//2.*str1<*str2,返回-1
		else if (*str1 < *str2)
		{
			return -1;
		}
		//3.*str1==*str2,对比下一对
		else
		{
			str1++;
			str2++;
		}
	}
	//两个字符串全相等
	return 0;
}

int my_strcmp_2(const char* str1, const char* str2)
{
	//判断str1和str2指向的元素是否相等，只有不相等，才出循环
	while (*str1 == *str2)
	{
		//只有相等并且同时指向'\0'才会相等，返回0
		if (*str1 == '\0')
		{
			return *str1-*str2;
		}
		str1++;
		str2++;
	}
	//不相等说明返回非0,字符的ASCII码值之差
		return *str1-*str2;
}

int main()
{
	char arr1[] = "abcdef";
	char arr2[] = "qwert";
	//int ret = my_strcmp_1(arr1, arr2);
	int ret = my_strcmp_2(arr1, arr2);
	if (ret > 0)
	{
		printf("%d\n",ret);
	}
	else if (ret < 0)
	{
		printf("%d\n", ret);
	}
	else
	{
		printf("%d\n", ret);
	}
	return 0;
}
